name: Build Binary Executable
on:
  workflow_dispatch:
    inputs:
      upload_to_release:
        description: "Upload to release (provide tag name, e.g., v1.0.0)"
        required: false
        type: string
  release:
    types: [published]

permissions:
  id-token: write
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            executable: install-release-linux-x86_64
            pkg_deps: patchelf
            build_args: ""
          - os: ubuntu-24.04-arm
            executable: install-release-linux-aarch64
            pkg_deps: patchelf
            build_args: ""
          # - os: windows-latest
          #   executable: install-release-windows.exe
          #   pkg_deps: ""
          #   build_args: "--windows-disable-console --assume-yes-for-downloads"
          - os: macos-latest
            executable: install-release-darwin
            pkg_deps: patchelf libmagic
            build_args: "--onefile-tempdir-spec=/tmp/nuitka-extract/install-release"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: uv sync --all-groups --dev

      - name: Install system dependencies
        if: matrix.pkg_deps != ''
        run: task pkg:install NAMES="${{ matrix.pkg_deps }}"

      - name: Build CLI
        run: task build:cli FILENAME=${{ matrix.executable }} ARGS="${{ matrix.build_args }}"
      
      - name: Patch executable for macos
        if: matrix.os == 'macos-latest'
        run: |
          xattr -d com.apple.quarantine ./dist/${{ matrix.executable }} || echo "Failed to remove quarantine"

      - name: Test executable
        run: |
          chmod +x ./dist/${{ matrix.executable }}
          ./dist/${{ matrix.executable }} --help

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: install-release-${{ matrix.os }}
          path: dist/${{ matrix.executable }}

      - name: Get latest release tag
        if: github.event_name == 'workflow_dispatch' && inputs.upload_to_release == ''
        id: latest_release
        run: |
          LATEST_TAG=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload GitHub Release Assets
        if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.upload_to_release || steps.latest_release.outputs.tag || github.ref_name }}
          files: |
            dist/${{ matrix.executable }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}