name: PyPy Release
on:
  release:
    types: [published, edited]
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
        platform: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: tag name
        run: echo $GITHUB_REF_NAME

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
       
      - name: Config Poetry
        run: |
          # curl -sSL https://install.python-poetry.org | python3 -
          python -m pip install --upgrade pip
          python -m pip install poetry==1.8.4
          poetry install

      - name: Build Wheel
        run: poetry build

      - name: Install PyInstaller
        run: pip install pyinstaller==6.11.1

      - name: Build Executable
        run: |
          bash -c '
          source $(poetry env info --path)/bin/activate; 
          pip install pyinstaller==6.11.1; 
          pyinstaller --onefile --distpath dist/${{ matrix.platform }} InstallRelease/cli.py
          '
          
          # test the executable
          chmod +x dist/${{ matrix.platform }}/cli
          ./dist/${{ matrix.platform }}/cli --help

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: install-release-${{ runner.os }}-${{ matrix.platform }}
          path: dist/${{ matrix.platform }}/cli

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts for arm64
      uses: actions/download-artifact@v4
      with:
        name: install-release-${{ runner.os }}-arm64
        path: dist/arm64

    - name: Download artifacts for amd64
      uses: actions/download-artifact@v4
      with:
        name: install-release-${{ runner.os }}-amd64
        path: dist/amd64

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/amd64/install-release-${{ runner.os }}-amd64
          dist/arm64/install-release-${{ runner.os }}-arm64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install pip and poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry==1.8.4
        poetry install

    - name: Publish to PyPI
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
        poetry publish
